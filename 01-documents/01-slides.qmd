---
title: "Quarto Documents"
format: 
  revealjs:
    transition: fade
    background-transition: fade
    theme: ../style.scss
    footer: "bit.ly/gasp2025"
filters:
  - reveal-auto-agenda
---

# Anatomy of a Quarto document

## Anatomy of a Quarto document

`.qmd` file format with three components:

1.  YAML: Metadata

2.  Text: Markdown

3.  Code: R, Python, Observable, and Julia

. . .

**Weave it all together**, and you have beautiful, powerful, and useful outputs!

::: notes
A Quarto document contains three types of content: a YAML header, code chunks, and markdown text.
:::

## Anatomy of a Quarto document

**Metadata: YAML**

:::: columns
::: {.column .fragment}

````{.markdown filename="my-document.qmd"}
---
title: "The Story of America's Dam Infrastructure"
format: html
---
````

:::

::: {.column .fragment}
* "Yet another markup language‚Äù
* Metadata of your document
* Demarcated by three dashes (`---`) on either end
*  Uses key-value pairs in the format `key: value`
:::

::::

::: notes
Quarto documents usually start with an (optional) YAML header demarcated by three dashes on either end. The basic syntax of YAML uses key-value pairs in the format key: value. It controls the output of the document and contain metadata for your document. YAML fields commonly found in headers of documents include metadata like author, subtitle, date as well as customization options like theme, fontcolor, fig-width, etc.
:::

## Anatomy of a Quarto document

**Text: Markdown**

````{.markdown filename="my-document.qmd"}
---
title: "The Story of America's Dam Infrastructure"
format: html
---

This analysis explores the National Inventory of Dams (NID) dataset.
````

. . .

* Markdown is a lightweight language for creating formatted text
* Quarto is based on Pandoc and uses its variation of markdown as its underlying document syntax

::: notes
Markdown is a lightweight markup language for creating formatted text using a plain-text editor. Quarto uses markdown syntax for text.
:::

## Anatomy of a Quarto document

**Text: Markdown**

```{=html}
<div class="sourceCode">
<pre class="sourceCode markdown">
<code class="sourceCode markdown">
The `nation.csv` dataset records the [**National Inventory of Dams (NID)**](https://nid.sec.usace.army.mil) information.
</code>
</pre>
</div>
```

The `nation.csv` dataset records [**National Inventory of Dams (NID)**](https://nid.sec.usace.army.mil) information.

## Anatomy of a Quarto document

**Text: Markdown**

+-----------------------------------+-------------------------------+
| Markdown syntax                   | Output                        |
+===================================+===============================+
|     *italics* and **bold**        | *italics* and **bold**        |
+-----------------------------------+-------------------------------+
|     superscript^2^ / subscript~2~ | superscript^2^ / subscript~2~ |
+-----------------------------------+-------------------------------+
|     ~~strikethrough~~             | ~~strikethrough~~             |
+-----------------------------------+-------------------------------+
|     `verbatim code`               | `verbatim code`               |
+-----------------------------------+-------------------------------+

## Anatomy of a Quarto document

**Code**

````{.markdown filename="my-document.qmd" code-line-numbers=|8-15}
---
title: "The Story of America's Dam Infrastructure"
format: html
---

This is [**National Inventory of Dams (NID)**](https://nid.sec.usace.army.mil) data.

```{{python}}
from plotnine import ggplot, aes, geom_bar

(
    ggplot(mpg, aes(x = "state", y = "dams"))
    + geom_bar()
)
```

````

## Anatomy of a Quarto document

**Code**

:::: columns
::: {.column}

````{.markdown filename="my-document.qmd" code-line-numbers=8-15}
---
title: "The Story of America's Dam Infrastructure"
format: html
---

This is [**National Inventory of Dams (NID)**](https://nid.sec.usace.army.mil) data.

```{{python}}
from plotnine import ggplot, aes, geom_bar

(
    ggplot(mpg, aes(x = "state", y = "dams"))
    + geom_bar()
)
```

````

:::

::: {.column}
* Code chunks begin and end with three backticks (usually)
* Code chunks are identified with a programming language in between `{}`
:::

::::

::: notes
Code chunks are identified with three backticks, the language in curly brackets, and can have optional chunk options identified by the hashpipe at the beginning of the line within the chunk.
:::

## Anatomy of a Quarto document

**Inline code** executes code *within Markdown*

````{.markdown filename="my-document.qmd"}
```{{python}}
dams = 92428
```

The number of dams is `{python} dams`.
````

Results in:

The number of dams is 92428.

## Anatomy of a Quarto document

**Code** can include optional chunk options, in YAML style, identified by `#|` at the beginning of the line

````{.markdown code-line-numbers=|9}
---
title: "The Story of America's Dam Infrastructure"
format: html
---

This is [**National Inventory of Dams (NID)**](https://nid.sec.usace.army.mil) data.

```{{python}}
#| echo: false
from plotnine import ggplot, aes, geom_bar

(
    ggplot(mpg, aes(x = "state", y = "dams"))
    + geom_bar()
)
```

````

::: notes
Code chunks can have optional chunk options identified by the hashpipe at the beginning of the line within the chunk.
:::

## Anatomy of a Quarto document

**Code** can include optional chunk options, in YAML style, identified by `#|` at the beginning of the line

````{.markdown code-line-numbers=9-10}
---
title: "The Story of America's Dam Infrastructure"
format: html
---

This is [**National Inventory of Dams (NID)**](https://nid.sec.usace.army.mil) data.

```{{python}}
#| include: false
#| fig.alt: "A scatterplot with state on the x-axis and dams on the y-axis."
from plotnine import ggplot, aes, geom_bar

(
    ggplot(mpg, aes(x = "state", y = "dams"))
    + geom_bar()
)
```

````

## Anatomy of a Quarto document

**Code** can include optional chunk options, in YAML style, identified by `#|` at the beginning of the line

+--------------+------------------------------------------------+
| Option       | Description                                    |
+==============+================================================+
| `eval`       | Evaluate the code chunk                        |
+--------------+------------------------------------------------+
| `echo`       | Include the source code                        |
+--------------+------------------------------------------------+
| `warning`    | Include warnings                               |
+--------------+------------------------------------------------+
| `include`    | Include code and results                       |
+--------------+------------------------------------------------+

Other options: <https://quarto.org/docs/computations/execution-options.html>

## Your turn  {background-color='{{< brand color pink >}}' .smaller}
  
{{< include 01-exercise01.qmd >}}

```{r}
#| label: doc-clock-1
#| echo: false
# 5 minutes, warning at 1 minute
countdown::countdown(minutes = 5, seconds = 0, play_sound = TRUE, warn_when = 1 * 60)
```

# Authoring Quarto

## Images and links

+------------------------------------+---------------------------------+
| Markdown syntax                    | Output                          |
+====================================+=================================+
|     <https://quarto.org>           | <https://quarto.org>            |
+------------------------------------+---------------------------------+
|     [Quarto](https://quarto.org)   | [Quarto](https://quarto.org)    |
+------------------------------------+---------------------------------+
|     ![](dam.jpg)                   | ![](dam.jpg)                    |
+------------------------------------+---------------------------------+

## Tables  {.small auto-animate="true"}

``` {{markdown}}
| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|    12 | 12   | 12      |   12   |
|   123 | 123  | 123     |  123   |
|     1 | 1    | 1       |   1    |
```

| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|    12 | 12   | 12      |   12   |
|   123 | 123  | 123     |  123   |
|     1 | 1    | 1       |   1    |

## Tables  {.small auto-animate="true"}

``` {{markdown}}
| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|    12 | 12   | 12      |   12   |
|   123 | 123  | 123     |  123   |
|     1 | 1    | 1       |   1    |

: Table Column Widths {tbl-colwidths="[10,30,30,30]"}
```

| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|    12 | 12   | 12      |   12   |
|   123 | 123  | 123     |  123   |
|     1 | 1    | 1       |   1    |

: Table Column Widths {tbl-colwidths="\[10,30,30,30\]"}

## Diagrams

```{mermaid}
%%| fig-width: 6
%%| echo: fenced
flowchart LR
  A[1] --> B(2)
  B --> C{3}
  C --> D[4]
  C --> E[5]
```

::: notes
There is also native support for diagrams, where the syntax is similar as R or Python where the execution is being run by Quarto. This is a Mermaid diagram, which is a newer project supported on GitHub where you can use it in their documents as well, so it's a pretty handy tool to get to know.
:::

## Equations

``` {{markdown}}
$$E = mc^{2}$$
```

$$E = mc^{2}$$

::: notes
Math mode in LaTeX
:::

## Divs and Spans

**Divs**

    ::: {.border}
    This content can be styled with a border
    :::
    
**Spans**

    [This is *some text*]{.class key="val"}

[This is *some text*]{.class key="val"}

::: notes
For furture customization, you can add classes, attributes, and other identifiers to content using Divs and Spans. Some are built into Quarto, and you can define your own, as well.
:::

## Divs

**Callout blocks**

```{.markdown filename="my-document.qmd"}
:::{.callout-tip}

Note that there are five types of callouts, including: 
`note`, `tip`, `warning`, `caution`, and `important`.

:::
```

. . .

::: callout-tip
Note that there are five types of callouts, including: `note`, `tip`, `warning`, `caution`, and `important`.
:::

## Divs

**Multiple columns**

```{.markdown filename="my-document.qmd"}
::: {layout-ncol=2}

![](dam.jpg)

Photo by <a href="https://unsplash.com/@dmey503?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Dan Meyers</a> on <a href="https://unsplash.com/photos/aerial-photography-of-body-of-water-w6X7XaolqA0?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::
```

. . .

::: {layout-ncol="2"}
![](dam.jpg)

Photo by <a href="https://unsplash.com/@dmey503?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Dan Meyers</a> on <a href="https://unsplash.com/photos/aerial-photography-of-body-of-water-w6X7XaolqA0?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::


## Divs

**Tabsets**

```{.markdown filename="my-document.qmd"}
::: {.panel-tabset group="language"}
## R

`library(dplyr)`

## Python

`import pandas as pd`
:::
```

::: {.panel-tabset group="language"}
## R

`library(dplyr)`

## Python

`import pandas as pd`
:::

## Spans

```{.markdown filename="my-document.qmd"}
This is text that is [red]{style="color:red;"}.
```

This is text that is [red]{style="color:red;"}.

. . .

```{.markdown filename="my-document.qmd"}
![](dam.jpg){fig-alt="A photo of a dam in Detroit"}
```

![](dam.jpg){fig-alt="A photo of a dam in Detroit"}

::: notes
You can also apply styles to inline text by creating spans. Use square brackets to surround the text and curly bracketes for the style you would like.
:::

# Changing formats

## Changing formats

````{.markdown code-line-numbers=3 filename="my-document.qmd"}
---
title: "The Story of America's Dam Infrastructure"
format: html
---
````

## Changing formats

:::: columns
::: {.column}

````{.markdown code-line-numbers=3 filename="my-document.qmd"}
---
title: "The Story of America's Dam Infrastructure"
format: revealjs
---
````
:::

::: {.column .fragment}
![](../images/revealjs.png)
:::
::::

## Changing formats

:::: columns
::: {.column}

````{.markdown code-line-numbers=3 filename="my-document.qmd"}
---
title: "The Story of America's Dam Infrastructure"
format: pdf
---
````
:::

::: {.column .fragment}
![](../images/pdf.png)
:::
::::

## Your turn  {background-color='{{< brand color pink >}}' .smaller}
  
{{< include 01-exercise02.qmd >}}

```{r}
#| label: doc-clock-2
#| echo: false
# 5 minutes, warning at 1 minute
countdown::countdown(minutes = 5, seconds = 0, play_sound = TRUE, warn_when = 1 * 60)
```
