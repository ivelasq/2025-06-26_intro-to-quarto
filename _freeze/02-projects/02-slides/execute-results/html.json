{
  "hash": "d13c7b5f720ab08e830b5a32950eb13f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Quarto Projects\"\nformat: \n  revealjs:\n    transition: fade\n    background-transition: fade\n    theme: ../style.scss\nfilters:\n  - reveal-auto-agenda\n---\n\n## Quarto projects\n\nQuarto projects are directories that provide:\n\n::: incremental\n\n* A way to render all or some of the files in a directory with a single command (e.g. `quarto render myproject`).\n* A way to share YAML configuration across multiple documents.\n* The ability to redirect output artifacts to another directory.\n* The ability to freeze rendered output (i.e. don’t re-execute documents unless they have changed).\n\n:::\n\n## Anatomy of a Quarto project\n\n::: r-fit-text\n> [A Quarto Project is a directory]{.fragment} [that contains a file called `_quarto.yml`.]{.fragment}\n:::\n\n\\\n\n::: columns\n::: {.column .fragment .fade-right width=\"50%\"}\nThis is a Quarto Project.\n\n```         \nmy-folder/\n├── _quarto.yml\n├── my-document.ipynb\n```\n:::\n\n::: {.column .fragment .fade-left width=\"50%\"}\nThis is not.\n\n```         \nmy-folder/\n├── my-document.ipynb\n```\n:::\n:::\n\n## \\_quarto.yml {auto-animate=\"true\"}\n\nA YAML file with particular keys and values that Quarto recognizes. Unrecognized keys are ignored.\n\n``` {.yaml .fragment filename=\"_quarto.yml\"}\nproject:\n  title: \"Quarto---To Tell Your Story with Data\"\n```\n\n## \\_quarto.yml {auto-animate=\"true\"}\n\nA YAML file with particular keys and values that Quarto recognizes. Unrecognized keys are ignored.\n\n``` {.yaml filename=\"_quarto.yml\" code-line-numbers=\"2,5-8|23-35|52-54\"}\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  page-navigation: true\n  title: \"Quarto---To Tell Your Story with Data\"\n  description: \"Government Advances in Statistical Programming (GASP) 2025\"\n\n  repo-url: https://github.com/ivelasq/2025-06-26_intro_to_quarto\n  repo-actions: [edit, issue]\n\n  open-graph: true\n\n  sidebar:\n    background: \"#2b3d5b\"\n    logo: \"images/fcsm-logo-no-text.png\"\n    pinned: true\n    align: center\n    style: docked\n    search: true\n    collapse-level: 2\n    contents:\n      - href: index.qmd\n        text: Home\n      - href: 00-introduction/index.qmd\n        text: Introduction\n      - href: 01-documents/index.qmd\n        text: Documents\n      - href: 02-projects/index.qmd\n        text: Projects\n      - href: 03-theming/index.qmd\n        text: Theming\n      - href: 04-publishing/index.qmd\n        text: Publishing\n        \n  page-footer:\n    right: \"This page is built with ❤️ and [Quarto](https://quarto.org/).\"\n    left: \"&copy; Copyright 2025, Isabella Velásquez\"\n    background: \"#D1D9E3\"\n\nformat:\n  html:\n    theme:\n      light: [brand, style.scss]\n    linkcolor: \"#991b1f\"\n    toc: true\n    code-copy: true\n    code-overflow: wrap\n    mainfont: \"Open Sans\"\n\nexecute:\n  freeze: auto\n  echo: true\n```\n\n## Freeze\n\nYou can use the freeze option to denote that computational documents should never be re-rendered during a global project render, or alternatively only be re-rendered when their source file changes:\n\n``` {.yaml .fragment filename=\"_quarto.yml\"}\nexecute:\n  freeze: true  # never re-render during project render\n```\n\n<br>\n\n``` {.yaml .fragment filename=\"_quarto.yml\"}\nexecute:\n  freeze: auto  # re-render only when source changes\n```\n\n## Your turn {background-color='{{< brand color pink >}}'}\n\n* In your folder, convert the document into a project by running:\n\n```{.bash filename=\"Terminal\"}\nquarto create project\n```\n\n* For **Type**, select `website`.\n* For **Directory**, type \".\".\n* For **Title**, give it a title related to dams.\n\nQuarto will create several files, including `_quarto.yml`.\n\n\n## Your turn {background-color='{{< brand color pink >}}' .smaller}\n\n* Add `final-py.qmd` or `final-r.qmd` under `Home` and give it the text `Report`:\n\n```{.yaml filename=\"_quarto.yml\"}\nnavbar:\n  left:\n    - href: index.qmd\n      text: Home\n    - href: final-r.qmd\n      text: Report\n```\n\n* Open `about.qmd` and add some information about yourself.\n* Render the project:\n  * **All editors:** Run `quarto render` in the Terminal.\n  * **RStudio:** Click the \"Render\" button.\n  * **VS Code and Positron:** Click \"Preview\".\n  \n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_99e449b9\" data-warn-when=\"60\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}