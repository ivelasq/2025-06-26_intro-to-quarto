---
title: "Intro to Quarto"
subtitle: "To Tell Your Story with Data"
format: 
  revealjs:
    transition: fade
    background-transition: fade
    theme: ../style.scss
    footer: <https://bit.ly/gasp2025>
filters:
  - reveal-auto-agenda
---

# Welcome

## About me

<center>

<img src="../images/profile.jpg" style="border-radius: 50%;" width="250px"/>

[{{< fa brands github >}} ivelasq](https://github.com/ivelasq)

[{{< fa brands linkedin >}} ivelasq](https://www.linkedin.com/in/ivelasq/)

[{{< fa link >}} ivelasq.rbind.io](https://ivelasq.rbind.io)

[{{< fa brands bluesky >}} ivelasq3](https://bsky.app/profile/ivelasq3.bsky.social)
</center>

## About you

::: your-turn
Please share in the chat...

- Your name
- Your professional affiliation
- What you produce with data (reports, dashboards, etc.)
- What programming language you use
:::

## About this workshop

::::::: columns
:::: {.column width="50%"}
::: {.fragment .fade-in-then-semi-out}
These materials are pitched at someone who:

* knows some R or Python 
* has R or Python installed
* creates documents that display output from code
* new to Markdown and Quarto
:::
::::

:::: {.column width="50%"}
::: {.fragment .fade-in}

What you will walk away with:

* An introductory knowledge of Quarto and its benefits of telling stories with data
* Examples of documents with code
:::
::::
:::::::

## Workshop structure

::::::: columns
::: {.column .fragment width="33%"}
**My turn**

-   Lecture segments
-   Feel free to just watch, take notes, browse docs, or tinker around with the code
:::

:::: {.column .fragment width="33%"}
::: our-turn
**Our turn**

-   Lecture segments + live coding
-   (Optionally) Follow along with live coding
:::
::::

:::: {.column .fragment width="33%"}
::: your-turn
**Your turn**

- Practice exercises for you!
- Ask questions in the chat if you run into issues
:::
::::
::::::::

## Instructions

::: incremental

* Workshop website: [bit.ly/gasp2025-quarto](https://bit.ly/gasp2025-quarto)
* Workshop exercise repo: <https://github.com/ivelasq/gasp2025-quarto-exercises>

:::

# Introduction to Quarto

## What is Quarto®? {auto-animate="true"}

<center>

Quarto® is an

::: {.fragment .grow .semi-fade-out}
open-source
:::

::: {.fragment .grow .semi-fade-out}
scientific and technical
:::

::: {.fragment .grow .semi-fade-out}
publishing system
:::

::: {.fragment .grow .semi-fade-out}
built on Pandoc.
:::

</center>

::: notes
Quarto is an open-source scientific and technical publishing system built on Pandoc. Let's break this down: Open-source: Posit believes that it's better for everyone if the tools used for research and science are free and open. Free software means more reproducibility, widespread sharing of knowledge and techniques, and elimination of cost barriers. Scientific and technical: Scientific and technical means that Quarto has specific things for journal articles or scientific papers, like support for code execution, citations, footnotes, scientific markdown, equations, citations, crossrefs, so many things. Publishing system: Quarto is a tool for writing dynamic documents that combine code, output, and text. It can embed output from Python, R, Julia, and Observable. Quarto can be rendered to create high-quality articles, reports, presentations, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more formats. Pandoc is the tool working behind the scenes to change Quarto documents to their finalized format. Quarto documents are authored with markdown, which is a plain text format. But Pandoc markdown is very rich and lets you control your document in very specific ways while being easy to read and write.
:::


## With Quarto...

you can weave together narrative and code to produce elegantly formatted output as documents, web pages, blog posts, books and more.

::: incremental
-   Create dynamic content with Python, R, Julia, and Observable
-   Edit documents in your favorite editor
-   Publish technical content in HTML, PDF, MS Word, and more
-   Share technical content by publishing to Posit Connect, Confluence, or other publishing systems
:::

## "Literate programming"

![](../images/literate-programming.png){fig-align="center"}

::: notes
Quarto sits inside the big and broad literate programming world, which mixes narrative in text form with code for formatted outputs like documents and webpages and more. There are lots of literate programming systems that support computation, like R Markdown, Org Mode, Jupyter Book, and now there is Quarto!
:::

## Why Quarto?

::: incremental
- Multilingual and independent of computational systems
- Quarto comes **"batteries included"** straight out of the box
- Consistent expression for core features
- Extension system
- Enable “single-source publishing” — create Word, PDFs, HTML, etc. from one source
- Use defaults that meet accessibility guidelines
:::

::: notes
So, if there already exist literate programming tools out there, why create a new one? Like mentioned earlier, Quarto was built from the start to support multiple computational systems and ecosystems. You can create presentations, books, websites, and so on after installing Quarto, you do not have to install other tools to create different things. Consistent expression for core features means that regardless of whether you are making a presentation, book, or website, the syntax is written same way. And for things that aren't part of base Quarto, there are extensions that can add further functionality. Single-source publishing, you often need to create all sorts of output, like things that are printed, on the web, on the mobile. The idea is to being able to make publications from one source. And the Quarto team thinks deeply about accessibility and how to have Quarto default to meet accessibility guidelines.
:::

## Why Quarto for telling stories with data?

::::::: columns
:::: {.column width="50%"}
::: {.fragment .fade-in-then-semi-out}
A good story is...

* Clear
* Credible
* Provides context
* Engaging
:::
::::

:::: {.column width="50%"}
::: {.fragment .fade-in-then-semi-out}
Quarto allows you to...

* Use many formats for telling your story
* Reproduce and automate results
* Add footnotes, cross-references
* Mix code and narrative together
:::
::::
:::::

## Quarto formats {.smaller}

| Feature | Quarto |
|--------------------------|----------------------------------------------|
| Basic Formats | [html](https://quarto.org/docs/output-formats/html-basics.html), [pdf](https://quarto.org/docs/output-formats/pdf-basics.html), [docx](https://quarto.org/docs/output-formats/ms-word.html), [typst](https://quarto.org/docs/output-formats/typst.html) |
| Beamer | [beamer](https://quarto.org/docs/presentations/beamer.html) |
| PowerPoint | [pptx](https://quarto.org/docs/presentations/powerpoint.html) |
| HTML Slides | [revealjs](https://quarto.org/docs/presentations/revealjs/) |
| Advanced Layout | [Quarto Article Layout](https://quarto.org/docs/authoring/article-layout.html) |
| Cross References | [Quarto Crossrefs](https://quarto.org/docs/authoring/cross-references.html) |
| Websites & Blogs | [Quarto Websites](https://quarto.org/docs/websites/), [Quarto Blogs](https://quarto.org/docs/websites/website-blog.html) |
| Books | [Quarto Books](https://quarto.org/docs/books/) |
| Interactivity | [Quarto Interactive Documents](https://quarto.org/docs/interactive/shiny/) |
| Journal Articles | [Journal Articles](https://quarto.org/docs/journals/index.html) |
| Dashboards | [Quarto Dashboards](https://quarto.org/docs/dashboards/) |

: {tbl-colwidths="\[25,75\]"}

## Quarto capabilities

Built for technical documents:

    Cross references
    Advanced layout
    Figure/layout panels
    Callouts
    Diagrams
    Extensions
    Interactivity
    YAML intelligence
    Publishing
    Conditional content
    Notebook filters

::: notes
Features are constantly being build into Quarto, like YAML intelligence, figure panels, layouts, which we'll cover later in the session.
:::

## Display data and results {.smaller}

[Vote Idaho Election Page](https://results.voteidaho.gov){preview-link="true"} by Andrew Heiss (Department of Public Management and Policy, Georgia State University) and the Idaho Secretary of State

[![](../images/id-elections.png){fig-align="center" width="40%" style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}](https://fosstodon.org/@andrew@fediscience.org/112485099746718354)

::: notes
Let's see some examples of how people have used Quarto to tell their stories. Andrew Heiss, in conjunction with the Idaho Secretary of State's office, created a Quarto website for Idaho's primary election results.
:::

## Display data and results {.smaller}

[Health Trends in England](https://fingertips.phe.org.uk/static-reports/health-trends-in-england/England/overview.html){preview-link="true"} by the  Department of Health & Social Care

[![](../images/england-health.png){fig-align="center" width="40%" style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}](https://bsky.app/profile/statsgeekclare.bsky.social/post/3ld6iwagnzs2m)

::: notes
The Department of Health & Social Care in England created a Health Trends tool to open up public health data to a broader audience, and were shortlisted in the Analysis in Government award.
:::

## Walk through a story {.smaller}

[Council Housing & Neighborhood Income Inequality in Vienna](https://mschnetzer.github.io/scrollytell_gemeindebau/){preview-link="true"} by Tamara Premrov and Matthias Schnetzer (European Centre for Social Welfare Policy and Research, Austria)

<center><script src="https://fast.wistia.com/player.js" async></script><script src="https://fast.wistia.com/embed/izl69pu9ua.js" async type="module"></script><style>wistia-player[media-id='izl69pu9ua']:not(:defined) { background: center / contain no-repeat url('https://fast.wistia.com/embed/medias/izl69pu9ua/swatch'); display: block; filter: blur(5px); }</style> <wistia-player media-id="izl69pu9ua" aspect="1.7777777777777777" style="width: 800px;height: 463px;"></wistia-player></center>

::: notes
Posit recently held a Scrollytelling contest. You may have seen articles in newspapers like the New York Times that display visualizations as you scroll through the document. Quarto has an extension called Scrollytelling that lets you create these sorts of stories in Quarto. This one, from folks at the European Centre for Social Welfare Policy and Research which talked about Housing & Neighborhood Income Inequality in Vienna, was one of the winners.
:::

## Publish papers {.smaller}

::::::: columns
:::: {.column width="50%"}

[Navigating Hostility: The Effect of Nonprofit Transparency and Accountability on Donor Preferences in the Face of Shrinking Civic Space](https://stats.andrewheiss.com/silent-skywalk/manuscript/output/manuscript.html){preview-link="true"} by Suparna Chaudhry (Lewis & Clark College, International Justice Lab at College of William & Mary) et al.
::::

:::: {.column width="50%"}
![](../images/manuscript.png){style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}
::::
:::::

::: notes
Quarto also has extensive features for writing journal articles, from diagrams and technical notation, to being able to publish according to journal standards through extensions.
:::

## Automate and reproduce your output {.smaller}

[Duplicating Quarto elements with code templates to reduce copy and paste errors](https://waterdata.usgs.gov/blog/quarto-template-demo/){preview-link="true"} by Althea A. Archer (United States Geological Survey)

![](../images/quarto_template_overview.png){fig-align="center" width="40%" style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}

::: notes
With Quarto, you can create reports or presentations that update automatically when data changes or when you change inputs because you are creating your report with code. There's a software engineering concept called the DRY Principle ("Don't Repeat Yourself") that is useful in data work that encourages writing code that can be reused with functions or loops instead of copy/paste. Use variables (parameters) to dynamically change parts of your analysis or report like to generate the same report for different regions, departments, or time periods, write reusable functions to avoid repeating code and keeps work cleaner, more consistent, and easier to maintain. The folks at United States Geological Survey have great blog posts on how they are implementing these ideas in Quarto.
:::

## Get your team on the same page {.smaller}

[We Converted Our Documentation to Quarto](https://melissavanbussel.quarto.pub/posit-conf-2023/#/section) by Melissa Van Bussel (Statistics Canada)

::::::: columns
:::: {.column width="80%"}

<iframe width="800" height="450" src="https://www.youtube.com/embed/zjPdBDyIyJ8?si=OIKzKvhMgzr77RFz" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

::::

:::: {.column width="20%"}
* Website for R/Python User Group
* Training resources
* Presentations
::::
:::::

::: notes
And finally, Melissa van Bussel gave a talk on how the Statistics Canada team converted not just their documentation, but training resources, presentations, and more to Quarto to streamline efforts.
:::

## ️Wrap Up {background-image="../images/quarto-chat.jpg" background-color="#2b3d5b"}

Quarto + Communication = ❤


::: aside
Photo by <a href="https://unsplash.com/@kellysikkema?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Kelly Sikkema</a> on <a href="https://unsplash.com/photos/two-white-speech-bubbles-sitting-on-top-of-a-brown-surface-sWRPYgjpygQ?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash">Unsplash</a>
:::

# Getting Started

## Installation

![](../images/getting-started.png){width=80% fig-align="center"}

::: aside
[quarto.org/docs/get-started/](https://quarto.org/docs/get-started/)
:::

::: notes
You can download the Quarto Command Line Interface, or CLI, on quarto.org. When you download the Quarto CLI, though, that's all you need to run Quarto, so you can use just your Terminal or Command Line Interface for everything that we'll explore, but you will need to install a programming language if you're going to run code with the CLI.
:::

## Tools for authoring

::: {layout-ncol="3" align="center"}

![](../images/positron-logo.png){width="160"}

![](https://quarto.org/docs/get-started/images/rstudio-logo.png){width="160"}

![](https://quarto.org/docs/get-started/images/vscode-logo.png){width="160"}

![](https://quarto.org/docs/get-started/images/jupyter-logo.png){width="160"}

![](https://quarto.org/docs/get-started/images/text-editor-logo.png){width="160"}

:::

```{.bash filename="Terminal"}
quarto render
```

::: notes
Part of the multilingualism of Quarto is that you are not tied to one tool. Quarto is meant for collaboration either within data science teams or across data science teams. So if someone is familiar with VS Code, but someone else likes to work in RStudio, they can still work on the same Quarto documents without having to switch to one tool or the other.
:::

## Our turn {background-color='{{< brand color light-blue >}}'}

Let's walk through your options for today.

::: incremental

1. Posit Cloud
2. GitHub Codespace
3. Local installation
 - GitHub repository
 - Package installation
:::
 
::: notes
Posit Cloud has R, RStudio, Quarto, packages, installed. You just need a free account. But I will delete in a few days. If you prefer Python, there is a GitHub Codespace. It takes many minutes to load so please open it up as soon as you can if you'd like to go this route. The packages will not come preinstalled, but the instructions are on the website. Finally, you can always install Positron, RStudio, or VS Code locally, but you will also need R or Python installed. You'll also have to install the packages and download the repo materials. So, if you do not have these set up, I recommend going with Posit Cloud or GitHub Codespace for now, and coming back to the materials after the workshop.
:::

## Your turn {background-color='{{< brand color pink >}}'}

Go to the workshop website and click on `00 - Introduction` in the sidebar.

<br>

<center>[bit.ly/gasp2025-quarto](https://bit.ly/gasp2025-quarto)</center>

<br>

Follow the setup instructions at the bottom.

```{r}
#| label: intro-clock1
#| echo: false
# 5 minutes, warning at 1 minute
countdown::countdown(minutes = 5, seconds = 0, play_sound = TRUE, warn_when = 1 * 60)
```

## Our turn: Quarto workflow {background-color='{{< brand color light-blue >}}'}

* Open a `.qmd` file.
* Preview/render the document.
* Make a change and preview/render again.

::::: columns
:::: {.column width="40%"}
![](../images/rstudio-preview.png){style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}
::::

:::: {.column width="40%"}
![](../images/positron-preview.png){ style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}
::::
:::::

## Your turn {background-color='{{< brand color pink >}}'}

{{< include 00-exercises02.qmd >}}

```{r}
#| label: intro-clock2
#| echo: false
# 5 minutes, warning at 1 minute
countdown::countdown(minutes = 5, seconds = 0, play_sound = TRUE, warn_when = 1 * 60)
```
